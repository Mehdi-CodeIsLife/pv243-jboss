/*
 * JBoss, Home of Professional Open Source.
 * Copyright 2012, Red Hat, Inc., and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */

package cz.muni.fi.pv243.et.exception;

import org.apache.deltaspike.core.api.exception.control.annotation.ExceptionHandler;
import org.apache.deltaspike.core.api.exception.control.annotation.Handles;
import org.apache.deltaspike.core.api.exception.control.event.ExceptionEvent;
import org.apache.deltaspike.security.api.authorization.AccessDeniedException;
import org.picketlink.authentication.AuthenticationException;
import org.slf4j.Logger;

import javax.faces.context.FacesContext;
import javax.inject.Inject;

/**
 * <p>
 * Exception handler to handle security related exceptions.
 * </p>
 * 
 * @author Pedro Silva
 * 
 */
@ExceptionHandler
public class SecurityExceptionHandler {

    @Inject
    private Logger logger;

    private FacesContext facesContext = FacesContext.getCurrentInstance();

    public void onAccessDenied(@Handles ExceptionEvent<AccessDeniedException> event) {
        logger.info("Access denied.");

        this.facesContext.getExternalContext().getSessionMap()
                .put("errorMessage", "Access denied. This message was generated by the SecurityExceptionHandler.");
    }

    public void onAuthenticationException(@Handles ExceptionEvent<AuthenticationException> event) {
        logger.info("Authentication failed");

        this.facesContext.getExternalContext().getSessionMap()
                .put("errorMessage", "Authentication failed. This message was generated by the SecurityExceptionHandler.");
    }

}
