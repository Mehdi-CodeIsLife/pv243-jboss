<?xml version="1.0"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">

    <persistence-unit name="et-pu" transaction-type="JTA">
        <!-- Use Hibernate OGM provider: configuration will be transparent -->
        <provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>

        <class>cz.muni.fi.pv243.et.model.Person</class>
        <class>cz.muni.fi.pv243.et.model.Purpose</class>
        <class>cz.muni.fi.pv243.et.model.Receipt</class>
        <class>cz.muni.fi.pv243.et.model.Currency</class>
        <class>cz.muni.fi.pv243.et.model.ExpenseReport</class>

        <class>cz.muni.fi.pv243.et.model.Payment</class>
        <class>cz.muni.fi.pv243.et.model.MoneyTransfer</class>
        <class>cz.muni.fi.pv243.et.model.Transaction</class>


        <!-- property optional if you plan and use Infinispan, otherwise adjust to your favorite
        NoSQL Datastore provider. -->
        <properties>

            <!-- Properties for Hibernate Search - ogm settings -->
            <property name="hibernate.ogm.datastore.provider" value="infinispan"/>
            <property name="hibernate.ogm.infinispan.configuration_resourcename" value="infinispan-ogm-config.xml"/>

            <!-- Properties for Hibernate Search - lucene indexes settings -->
            <property name="hibernate.search.default.directory_provider" value="infinispan"/>
            <property name="hibernate.search.default.indexBase" value="data/lucene-indexes"/>
            <property name="hibernate.search.infinispan.configuration_resourcename" value="infinispan.xml"/>

            <property name="hibernate.transaction.jta.platform"
                      value="org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform" />
        </properties>
        
    </persistence-unit>


    <persistence-unit name="TestPU">
        <jta-data-source>java:jboss/datasources/ExampleDS</jta-data-source>

        <!-- If you are running in a production environment, add a managed
           data source, this example data source is just for development and testing! -->
        <!-- The datasource is deployed as WEB-INF/kitchensink-quickstart-ds.xml, you
           can find it in the source at src/main/webapp/WEB-INF/kitchensink-quickstart-ds.xml -->
        <properties>
            <!-- Properties for Hibernate -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <!--<property name="hibernate.hbm2ddl.auto" value="create-drop" />-->
            <property name="hibernate.hbm2ddl.auto" value="update" />
            <property name="hibernate.show_sql" value="false" />
            <!-- Properties for Hibernate Search -->
            <property name="hibernate.search.default.indexBase" value="data/lucene-indexes"/>
            <!--<property name="hibernate.search.default.directory_provider" value="infinispan"/>-->
            <!--<property name="hibernate.search.infinispan.configuration_resourcename" value="infinispan.xml"/>-->
        </properties>
    </persistence-unit>

    <persistence-unit name="IdentityManagementPU">
        <provider>org.hibernate.ejb.HibernatePersistence</provider>
        <jta-data-source>java:jboss/datasources/ProjectEtIdentityDS</jta-data-source>

        <class>org.picketlink.idm.jpa.schema.IdentityObject</class>
        <class>org.picketlink.idm.jpa.schema.PartitionObject</class>
        <class>org.picketlink.idm.jpa.schema.RelationshipObject</class>
        <class>org.picketlink.idm.jpa.schema.RelationshipIdentityObject</class>
        <class>org.picketlink.idm.jpa.schema.RelationshipObjectAttribute</class>
        <class>org.picketlink.idm.jpa.schema.IdentityObjectAttribute</class>
        <class>org.picketlink.idm.jpa.schema.CredentialObject</class>
        <class>org.picketlink.idm.jpa.schema.CredentialObjectAttribute</class>

        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <!--<property name="hibernate.hbm2ddl.auto" value="update" />-->
            <property name="hibernate.hbm2ddl.auto" value="update" />
            <property name="hibernate.show_sql" value="false" />
        </properties>
    </persistence-unit>
</persistence>


